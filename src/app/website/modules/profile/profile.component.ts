import { Component, OnInit } from '@angular/core';
import { ProfileService } from './services/profile.service';
import { User } from './models/user.interface';
import { DomSanitizer, SafeUrl } from '@angular/platform-browser';

declare global {
  interface Window {
    Telegram: any;
  }
}

@Component({
  selector: 'app-profile',
  templateUrl: './profile.component.html',
  styleUrls: ['./profile.component.scss']
})
export class ProfileComponent implements OnInit {
  loading = true;
  error: string | null = null;
  user: User | null = null;
  avatarUrl: string | SafeUrl = 'https://e7.pngegg.com/pngimages/524/597/png-clipart-exotel-cloud-communications-privacy-policy-interactive-voice-response-information-others-miscellaneous-blue.png';
  username: string = '–ì–æ—Å—Ç—å'; // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userId: string = '–ù–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞'; // –Æ–∑–µ—Ä–Ω–µ–π–º –≤–º–µ—Å—Ç–æ ID
  phoneNumber: string = '–ù–æ–º–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω';

  constructor(
    private profileService: ProfileService,
    private sanitizer: DomSanitizer
  ) {}

  ngOnInit() {
    this.loadProfile();
  }

  private formatPhoneNumber(phone: string): string {
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const cleaned = phone.replace(/\D/g, '');
    
    // –£–±–∏—Ä–∞–µ–º +7 –∏–ª–∏ 8 –≤ –Ω–∞—á–∞–ª–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    const numbers = cleaned.replace(/^(7|8)/, '');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
    if (numbers.length !== 10) {
      return phone; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –Ω–æ–º–µ—Ä, –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    return `+7 (${numbers.slice(0,3)}) ${numbers.slice(3,6)}-${numbers.slice(6,8)}-${numbers.slice(8)}`;
  }

  private loadProfile() {
    this.loading = true;
    this.error = null;

    this.profileService.getProfile().subscribe({
      next: (response) => {
        this.user = response.user;
        this.loading = false;
        if (this.user) {
          this.username = this.user.username || '–ì–æ—Å—Ç—å';
          this.userId = `@${this.user.username}`;
          this.phoneNumber = this.user.phone ? this.formatPhoneNumber(this.user.phone) : '–ù–æ–º–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω';
          
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤–∞—Ç–∞—Ä–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
          if (this.user.photo) {
            // –ï—Å–ª–∏ —Ñ–æ—Ç–æ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ—Ñ–∏–∫—Å data:image, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
            if (this.user.photo.startsWith('data:image')) {
              this.avatarUrl = this.sanitizer.bypassSecurityTrustUrl(this.user.photo);
            } else {
              // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å
              this.avatarUrl = this.sanitizer.bypassSecurityTrustUrl(`data:image/jpeg;base64,${this.user.photo}`);
            }
          } else {
            this.avatarUrl = 'https://e7.pngegg.com/pngimages/524/597/png-clipart-exotel-cloud-communications-privacy-policy-interactive-voice-response-information-others-miscellaneous-blue.png';
          }
        }
      },
      error: (err) => {
        this.error = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è';
        this.loading = false;
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', err);
      }
    });
  }

  requestPhoneNumber() {
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      tg.requestContact((response: any) => {
        console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç Telegram (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞):", response);
  
        if (response && response.result) {
          try {
            // –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL
            const decoded = decodeURIComponent(response.result);
            console.log("üîç –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:", decoded);
  
            // –ò—â–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            const match = decoded.match(/"phone_number":"(\d+)"/);
            if (match && match[1]) {
              this.phoneNumber = this.formatPhoneNumber(match[1]);
              localStorage.setItem('userPhoneNumber', this.phoneNumber);
              console.log("‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", this.phoneNumber);
            } else {
              console.warn("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.");
            }
          } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞:", error);
          }
        } else {
          console.warn("‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä.");
        }
      });
    }
  }
}

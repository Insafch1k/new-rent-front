import { Component, OnInit } from '@angular/core';

declare global {
  interface Window {
    Telegram: any;
  }
}

@Component({
  selector: 'app-profile',
  templateUrl: './profile.component.html',
  styleUrls: ['./profile.component.scss']
})
export class ProfileComponent implements OnInit {
  avatarUrl: string = 'https://via.placeholder.com/150';
  username: string = '–ì–æ—Å—Ç—å'; // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userId: string = '–ù–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞'; // –Æ–∑–µ—Ä–Ω–µ–π–º –≤–º–µ—Å—Ç–æ ID
  phoneNumber: string = '–ù–æ–º–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω';

  ngOnInit() {
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      const user = tg.initDataUnsafe?.user;

      if (user) {
        this.username = user.first_name || '–ì–æ—Å—Ç—å'; // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–º–µ—Å—Ç–æ username
        this.userId = user.username ? `@${user.username}` : '–ù–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞'; // –Æ–∑–µ—Ä–Ω–µ–π–º –≤–º–µ—Å—Ç–æ ID
        this.avatarUrl = user.photo_url || 'https://via.placeholder.com/150';
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
      const savedPhone = localStorage.getItem('userPhoneNumber');
      if (savedPhone) {
        this.phoneNumber = savedPhone;
      }
    }
  }


  requestPhoneNumber() {
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      tg.requestContact((response: any) => {
        console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç Telegram (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞):", response);
  
        if (response && response.result) {
          try {
            // –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL
            const decoded = decodeURIComponent(response.result);
            console.log("üîç –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:", decoded);
  
            // –ò—â–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            const match = decoded.match(/"phone_number":"(\d+)"/);
            if (match && match[1]) {
              this.phoneNumber = `+${match[1]}`; // –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É +7...
              localStorage.setItem('userPhoneNumber', this.phoneNumber);
              console.log("‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", this.phoneNumber);
            } else {
              console.warn("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.");
            }
          } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞:", error);
          }
        } else {
          console.warn("‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä.");
        }
      });
    }
  }
  
  
}
